@using System.Globalization
@model BudgetOnline.Web.Models.CurrencyWithFormula
@{
    var placeholder = "";
    if (ViewData.ModelMetadata.AdditionalValues.ContainsKey("placeholder"))
    {
        placeholder = ViewData.ModelMetadata.AdditionalValues["placeholder"].ToString();
    }

    ModelState state = ViewData.ModelState[ViewData.ModelMetadata.PropertyName];
    var value = Model.Sum.ToString(CultureInfo.CurrentUICulture);

    var cssClass = "col-md-10 data-type-calculator form-control";
    if (state != null && state.Errors.Count > 0)
    {
        cssClass += " input-validation-error";
    }
}
<div class="row">
    <div class="input-group">
        @Html.TextBox("Formula", Model.Formula, new { @class = @cssClass, placeholder, autocomplete = "off" })}
        <span class="input-group-addon"><i class="glyphicon glyphicon-circle-arrow-right"></i></span>
    </div>
</div>
<div class="row">
    <span style="padding-left: 1em; padding-right: .2em">Результат:</span>@Html.TextBox("Value", value, new { @class = "col-md-3 form-control calculator-result", @readonly = "readonly", autocomplete = "off" })
</div>
