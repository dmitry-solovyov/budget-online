@using BudgetOnline.Web.Infrastructure.Extensions
@if (ViewData.TemplateInfo.TemplateDepth > 1)
{
    @ViewData.ModelMetadata.SimpleDisplayText
}
else
{
    if (!ViewData.ModelState.IsValid)
    {
@*		<text>
			<div class="alert alert-error">
				Произошла ошибка!
			</div>
		</text>*@
    }

    var props = ViewData.ModelMetadata.Properties.Where(pm => pm.ShowForEdit && !ViewData.TemplateInfo.Visited(pm)).ToArray();
    foreach (var p in props)
    {
        var prop = p;
        
        ModelState state = ViewData.ModelState[prop.PropertyName];
        //var rowHeader = prop.AdditionalValues.GetEntry("ControlHeader");
        var rowId = prop.AdditionalValues.GetEntry("ControlRowId");
        var rowClass = prop.AdditionalValues.GetEntry("ControlRowClass");

@*        if (!string.IsNullOrWhiteSpace(rowHeader))
        {
    <div class="form-group">
        <div class="controls">
            <span class="">
                <h4>@rowHeader</h4>
            </span>
        </div>
    </div>
        }
*@
        if (prop.HideSurroundingHtml)
        {
    @Html.Editor(prop.PropertyName)
        }
        else
            if (prop.IsReadOnly)
            {
    <div class="form-group @(state != null && state.Errors.Count > 0 ? "error" : "")">
        @if (!prop.AdditionalValues.ContainsKey("HiddenLabel"))
        {
            <label class="control-label" for="@prop.PropertyName">@Html.Label(prop.PropertyName)</label>
        }
        <div class="col-md-10">
            <span class="input-sm">@Html.DisplayText(prop.PropertyName)</span>
        </div>
    </div>
	
            }
            else
            {
    <div class="form-group @rowClass @(state != null && state.Errors.Count > 0 ? "error" : "")" id="@rowId">
        @if (!prop.AdditionalValues.ContainsKey("HiddenLabel"))
        {
            <label class="control-label col-md-2" for="@prop.PropertyName">@Html.Label(prop.PropertyName)</label>
        }
        <div class="col-md-9 @(prop.AdditionalValues.ContainsKey("HiddenLabel") ? " col-md-offset-2" : "")">
            @Html.Editor(prop.PropertyName)
            @(Html.EditorFor(o => prop, "ErrorLabel"))
            @*@Html.ValidationMessage(prop.PropertyName)*@
        </div>
    </div>
            }
    }
}