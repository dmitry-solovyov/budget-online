@model BudgetOnline.Web.ViewModels.TransactionListViewModel
@{
    ViewBag.Title = "Transactions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row" style="margin-bottom: .5em">
    <div class="col-md-12">
        @Html.BudgetOnlineWeb().ButtonNormal().Caption("Новая запись").Css("btn btn-default").RedirectTo(Url.Action("create")).Icon("glyphicon glyphicon-plus").Build()
    </div>
</div>
<div class="row darkback border-tp">
    <form class="form-search" role="form" action="list" id="searchFilterForm" method="POST">
    <div class="row-fluid">
        <div class="col-md-12">
            <div class="control-list">
                <label class="control-label">
                    Даты c:</label>
                <a href="#" id="fromDateSelector" data-type="date-select" data-dtselect-target="fromDate"
                    style="padding: 0 .5em;">@(Model.Search.FromDate.HasValue ? Model.Search.FromDate.Value.ToLocalTime().ToShortDateString() : "(не указано)")</a>
                <a href="#" data-type="date-deselect" data-dtselect-target="fromDate" data-dtselect-displaytarget="fromDateSelector"
                    data-dtselect-default="(не указано)"><i class="glyphicon glyphicon-remove-sign">
                    </i></a>
                <input type="hidden" id="fromDate" name="fromDate" value="@(Model.Search.FromDate.HasValue ? Model.Search.FromDate.Value.ToLocalTime().ToShortDateString() : "")"/>
                <label class="control-label" style="padding-left: 1em;">
                    по:</label>
                <a href="#" id="toDateSelector" data-type="date-select" data-dtselect-target="toDate"
                    style="padding: 0 .5em;">@(Model.Search.ToDate.HasValue ? Model.Search.ToDate.Value.ToLocalTime().ToShortDateString() : "(не указано)")</a>
                <a href="#" data-type="date-deselect" data-dtselect-target="toDate" data-dtselect-displaytarget="toDateSelector"
                    data-dtselect-default="(не указано)"><i class="glyphicon glyphicon-remove-sign">
                    </i></a>
                <input type="hidden" id="toDate" name="toDate" value="@(Model.Search.ToDate.HasValue ? Model.Search.ToDate.Value.ToLocalTime().ToShortDateString() : "")"/>
                @*                    <span style="padding-left: 1em">Текст:</span>
                    @Html.TextBox("search", Model.Search.Text ?? string.Empty, new { @class = "" })*@
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label">
                    Текст</label>
                @Html.TextBox("search", Model.Search.Text ?? string.Empty, new { @class = "form-control input-sm" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label">
                    Категория</label>
                @(new BudgetOnline.UI.Views.Editors.SelectList().Render(Model.Search.Categories, "Category", "input-sm", false))
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label">
                    Счет</label>
                @(new BudgetOnline.UI.Views.Editors.SelectList().Render(Model.Search.Accounts, "Account", "col-md-6 input-sm", false))
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="col-md-12">
            <p>@Html.BudgetOnlineWeb().PrimaryButton().Caption("Поиск").Build()</p>
        </div>
    </div>
    </form>
</div>
@Html.Partial("~/Views/Transactions/_List.cshtml", Model)
<script type="text/javascript">
    $(document).ready(function () {
        //$('#searchFilterForm').bind('submit', searchFormSubmit);
        var response = $.get('http://localhost/budget4_api/session/me', function (data) {
            alert(data);
        });

    });
    $(window).load(function () {
        //loadListData();
    });

    function searchFormSubmit(evt) {
        evt.preventDefault();
        //loadListData();
    }

    function deleteRecord(id) {
        var response = confirm("Удалить запись?");
        if (response) {
            $.postdatas({
                url: '@Url.Action("Delete")',
                datas: [{ name: "id", value: "" + id}]
            });
        }
    }

    function loadListData() {
        showIndicatorFor($("#listOutput").parent(), 'progress');
        //$("#listOutput").empty();
        $.ajax({
            url: $('#searchFilterForm').attr('action'),
            data: $('#searchFilterForm').serialize(),
            type: 'POST',
            dataType: 'html',
            cache: false,
            success: function (responseText) {
                $("#listOutput").html(responseText);
                hideIndicatorFor($("#listOutput").parent(), 'progress');
            }
        });
    }
</script>
@section RightBar
{
}
