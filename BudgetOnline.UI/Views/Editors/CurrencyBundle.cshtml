@using System.Web.Mvc
@using System.Globalization
@functions {
}
@helper Render(BudgetOnline.UI.Models.Editors.CurrencyBundle model, string propertyName, ModelState state, IDictionary<string, object> additionalValues)
    {
        var id = Html.GetUniqId(10);

        var placeholder = "";
        if (additionalValues.ContainsKey("placeholder"))
        {
            placeholder = additionalValues["placeholder"].ToString();
        }

        var value = model.Sum.ToString(CultureInfo.CurrentUICulture);

        var cssFormulaClass = " span10 data-type-calculator input-block-level";
        if (state != null && state.Errors.Count > 0)
        {
            cssFormulaClass += " input-validation-error";
        }

        var cssCurrencyListClass = " data-type-calculator input-block-level";
        if (state != null && state.Errors.Count > 0)
        {
            cssCurrencyListClass += " input-validation-error";
        }

        var cssAccountListClass = " data-type-calculator input-block-level";
        if (state != null && state.Errors.Count > 0)
        {
            cssAccountListClass += " input-validation-error";
        }

    <div id="@id">
        <div class="row-fluid">
            <div class="span4">
                @(new BudgetOnline.UI.Views.Editors.SelectList().Render(model.Account.Items, propertyName + ".Account", cssAccountListClass, false))
            </div>
            <div class="span1">
            </div>
            <div class="span4">
                <div class="row-fluid">
                    <div class="input-append span12">
                        <input type="text" name="@(propertyName).Formula" id="@(propertyName)_Formula" value="@(model.Formula)" class="@cssFormulaClass" autocomplete = "off" placeholder="@placeholder"/>
                        <span class="add-on"><i class="icon-comment"></i></span>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="span12">
                        <input type="text" name="@(propertyName).Sum" id="@(propertyName)_Sum" value="@value" class="calculator-result span10" readonly = "readonly" autocomplete = "off" title = "Результат из поля Сумма"/>
                    </div>
                </div>
            </div>
            <div class="span3">
                @(new BudgetOnline.UI.Views.Editors.SelectList().Render(model.Currency.Items, propertyName + ".Currency", cssCurrencyListClass, false))
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            turnOn_calculator('@(id)');
        });
    </script>
}