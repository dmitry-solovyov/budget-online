@*
    Generator: MvcHelper
    GeneratePrettyNames : true
*@

@using BudgetOnline.UI.Models.SelectItems

@helper Render(SelectItemsModel model, string propertyName, string cssClass, bool multiSelect, int columns)
    {
    var rows = Convert.ToInt32(Math.Ceiling(Convert.ToDecimal(model.Items.Count()) / columns));
    for (int r = 0; r < rows; r++)
    {
        <div class="row visible-sm visible-xs" style="height: 10px"></div>
    <div class="row">
        @{
        for (int c = 0; c < columns; c++)
        {
            var index = r * columns + c;
            if (index < model.Items.Count())
            {
                var item = model.Items.ElementAt(index);
            <div class="col-sm-6 col-xs-8 col-md-@(Convert.ToInt32(Math.Ceiling(12m / columns)))">
                <label class="checkbox-inline">
                    <input type="checkbox" id="@item.Value" name="@(propertyName)[@(item.Value)]" value="@item.Text" @(new HtmlString(item.Selected ? "checked='checked'" : string.Empty))/>
                    @item.Text
                </label>
            </div>
            }
        }
        }
    </div>
    }
}