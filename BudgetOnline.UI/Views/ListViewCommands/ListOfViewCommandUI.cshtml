@* Generator: MvcHelper *@
@using BudgetOnline.UI.Views.ListViewCommands
@using BudgetOnline.UI.Models.ViewCommands
@helper Render(IEnumerable<ViewCommandUIModel> commands)
{
        if (commands == null || !commands.Any())
        {
        }
        else
        {
    <div class="btn-group">
        @{
			var defaultCommand = commands.FirstOrDefault(o => o.IsDefault && o.Command.CommandType == CommandType.Redirect);
            if (defaultCommand != null)
            {
                @ViewCommandUIDefault.Render(defaultCommand)
                
				@*<a class="btn btn-small" href="@((defaultCommand.Command as RedirectViewCommandModel).Path)"><i class="@iconForDefaultCommand"></i><span style="padding-left: 1em">@defaultCommand.Text</span></a>*@
            }
            else
            {
                <a class="btn btn-mini" href=""><i class="icon-list"></i><span style="padding-left: 1em">Команды</span></a>
            }
        }
        <a class="btn btn-mini dropdown-toggle" data-toggle="dropdown" href="#"><span class="caret"></span></a>
        <ul class="dropdown-menu">
            @foreach (var command in commands)
            {
                @ViewCommandUI.Render(command, false)
            }
        </ul>
    </div>
        }
}