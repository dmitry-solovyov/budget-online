@*
    Generator: MvcHelper
    GeneratePrettyNames : true
*@

@using BudgetOnline.UI.Models.ViewCommands
@using BudgetOnline.UI.Views.ListViewCommands

@helper Render(ViewCommandUIModel command, bool isRoot)
    {
        if (command.IsVisible)
        {
            if (command.IsDividerBefore)
            {
    <li class="divider" role="separator"></li>
            }

            if (command.ChildCommands != null && command.ChildCommands.Any())
            {
    <li class="dropdown@(!isRoot ? "-submenu" : string.Empty)">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">@command.Text<b class="caret"></b></a>
        <ul class="dropdown-menu">
            @foreach (var childItem in command.ChildCommands)
            {
                @(ViewCommandUI.Render(childItem, false))
            }
        </ul>
    </li>
            }
            else if (command.Command.CommandType == CommandType.Post)
            {
    <li>@PostViewCommand.Render(command)</li>
            }
            else if (command.Command.CommandType == CommandType.Redirect)
            {
    <li>@RedirectViewCommand.Render(command)</li>
            }
            else if (command.Command.CommandType == CommandType.Js)
            {
    <li>@JsViewCommand.Render(command)</li>
            }

            if (command.IsDividerAfter)
            {
    <li class="divider"></li>
            }
        }
}