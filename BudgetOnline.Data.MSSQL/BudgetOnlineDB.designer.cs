#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BudgetOnline.Data.MSSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Budget")]
	public partial class BudgetOnlineDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCategoryTemplate(CategoryTemplate instance);
    partial void UpdateCategoryTemplate(CategoryTemplate instance);
    partial void DeleteCategoryTemplate(CategoryTemplate instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertCurrencyRate(CurrencyRate instance);
    partial void UpdateCurrencyRate(CurrencyRate instance);
    partial void DeleteCurrencyRate(CurrencyRate instance);
    partial void InsertDateTitle(DateTitle instance);
    partial void UpdateDateTitle(DateTitle instance);
    partial void DeleteDateTitle(DateTitle instance);
    partial void InsertDirection(Direction instance);
    partial void UpdateDirection(Direction instance);
    partial void DeleteDirection(Direction instance);
    partial void InsertPeriodType(PeriodType instance);
    partial void UpdatePeriodType(PeriodType instance);
    partial void DeletePeriodType(PeriodType instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertPlannedTransaction(PlannedTransaction instance);
    partial void UpdatePlannedTransaction(PlannedTransaction instance);
    partial void DeletePlannedTransaction(PlannedTransaction instance);
    partial void InsertSectionAdmin(SectionAdmin instance);
    partial void UpdateSectionAdmin(SectionAdmin instance);
    partial void DeleteSectionAdmin(SectionAdmin instance);
    partial void InsertSection(Section instance);
    partial void UpdateSection(Section instance);
    partial void DeleteSection(Section instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertStatisticsTotalOnDateDetail(StatisticsTotalOnDateDetail instance);
    partial void UpdateStatisticsTotalOnDateDetail(StatisticsTotalOnDateDetail instance);
    partial void DeleteStatisticsTotalOnDateDetail(StatisticsTotalOnDateDetail instance);
    partial void InsertStatisticsTotalOnDate(StatisticsTotalOnDate instance);
    partial void UpdateStatisticsTotalOnDate(StatisticsTotalOnDate instance);
    partial void DeleteStatisticsTotalOnDate(StatisticsTotalOnDate instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertTransactionGroup(TransactionGroup instance);
    partial void UpdateTransactionGroup(TransactionGroup instance);
    partial void DeleteTransactionGroup(TransactionGroup instance);
    partial void InsertTransactionLink(TransactionLink instance);
    partial void UpdateTransactionLink(TransactionLink instance);
    partial void DeleteTransactionLink(TransactionLink instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertTransactionTag(TransactionTag instance);
    partial void UpdateTransactionTag(TransactionTag instance);
    partial void DeleteTransactionTag(TransactionTag instance);
    partial void InsertTransactionType(TransactionType instance);
    partial void UpdateTransactionType(TransactionType instance);
    partial void DeleteTransactionType(TransactionType instance);
    partial void InsertUserConnect(UserConnect instance);
    partial void UpdateUserConnect(UserConnect instance);
    partial void DeleteUserConnect(UserConnect instance);
    partial void InsertUserConnectStatuse(UserConnectStatuse instance);
    partial void UpdateUserConnectStatuse(UserConnectStatuse instance);
    partial void DeleteUserConnectStatuse(UserConnectStatuse instance);
    partial void InsertUserPassword(UserPassword instance);
    partial void UpdateUserPassword(UserPassword instance);
    partial void DeleteUserPassword(UserPassword instance);
    partial void InsertUserPermission(UserPermission instance);
    partial void UpdateUserPermission(UserPermission instance);
    partial void DeleteUserPermission(UserPermission instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserSetting(UserSetting instance);
    partial void UpdateUserSetting(UserSetting instance);
    partial void DeleteUserSetting(UserSetting instance);
    #endregion
		
		public BudgetOnlineDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BudgetOnlineDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BudgetOnlineDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BudgetOnlineDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<CategoryTemplate> CategoryTemplates
		{
			get
			{
				return this.GetTable<CategoryTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyRate> CurrencyRates
		{
			get
			{
				return this.GetTable<CurrencyRate>();
			}
		}
		
		public System.Data.Linq.Table<DateTitle> DateTitles
		{
			get
			{
				return this.GetTable<DateTitle>();
			}
		}
		
		public System.Data.Linq.Table<Direction> Directions
		{
			get
			{
				return this.GetTable<Direction>();
			}
		}
		
		public System.Data.Linq.Table<PeriodType> PeriodTypes
		{
			get
			{
				return this.GetTable<PeriodType>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<PlannedTransaction> PlannedTransactions
		{
			get
			{
				return this.GetTable<PlannedTransaction>();
			}
		}
		
		public System.Data.Linq.Table<SectionAdmin> SectionAdmins
		{
			get
			{
				return this.GetTable<SectionAdmin>();
			}
		}
		
		public System.Data.Linq.Table<Section> Sections
		{
			get
			{
				return this.GetTable<Section>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<StatisticsTotalOnDateDetail> StatisticsTotalOnDateDetails
		{
			get
			{
				return this.GetTable<StatisticsTotalOnDateDetail>();
			}
		}
		
		public System.Data.Linq.Table<StatisticsTotalOnDate> StatisticsTotalOnDates
		{
			get
			{
				return this.GetTable<StatisticsTotalOnDate>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<TransactionGroup> TransactionGroups
		{
			get
			{
				return this.GetTable<TransactionGroup>();
			}
		}
		
		public System.Data.Linq.Table<TransactionLink> TransactionLinks
		{
			get
			{
				return this.GetTable<TransactionLink>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<TransactionTag> TransactionTags
		{
			get
			{
				return this.GetTable<TransactionTag>();
			}
		}
		
		public System.Data.Linq.Table<TransactionType> TransactionTypes
		{
			get
			{
				return this.GetTable<TransactionType>();
			}
		}
		
		public System.Data.Linq.Table<UserConnect> UserConnects
		{
			get
			{
				return this.GetTable<UserConnect>();
			}
		}
		
		public System.Data.Linq.Table<UserConnectStatuse> UserConnectStatuses
		{
			get
			{
				return this.GetTable<UserConnectStatuse>();
			}
		}
		
		public System.Data.Linq.Table<UserPassword> UserPasswords
		{
			get
			{
				return this.GetTable<UserPassword>();
			}
		}
		
		public System.Data.Linq.Table<UserPermission> UserPermissions
		{
			get
			{
				return this.GetTable<UserPermission>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserSetting> UserSettings
		{
			get
			{
				return this.GetTable<UserSetting>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectionId;
		
		private string _Name;
		
		private string _Description;
		
		private bool _ShowForIncome;
		
		private bool _ShowForOutcome;
		
		private bool _ShowForTransfer;
		
		private string _Icon;
		
		private bool _IsDefault;
		
		private bool _IsDisabled;
		
		private bool _IsExternal;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<CategoryTemplate> _CategoryTemplates;
		
		private EntitySet<CategoryTemplate> _CategoryTemplates_Accounts_Tos;
		
		private EntitySet<PlannedTransaction> _PlannedTransactions;
		
		private EntitySet<TransactionGroup> _TransactionGroups;
		
		private EntitySet<TransactionGroup> _TransactionGroups_Accounts1s;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntityRef<Section> _Section;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShowForIncomeChanging(bool value);
    partial void OnShowForIncomeChanged();
    partial void OnShowForOutcomeChanging(bool value);
    partial void OnShowForOutcomeChanged();
    partial void OnShowForTransferChanging(bool value);
    partial void OnShowForTransferChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnIsExternalChanging(bool value);
    partial void OnIsExternalChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Account()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowForIncome", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool ShowForIncome
		{
			get
			{
				return this._ShowForIncome;
			}
			set
			{
				if ((this._ShowForIncome != value))
				{
					this.OnShowForIncomeChanging(value);
					this.SendPropertyChanging();
					this._ShowForIncome = value;
					this.SendPropertyChanged("ShowForIncome");
					this.OnShowForIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowForOutcome", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool ShowForOutcome
		{
			get
			{
				return this._ShowForOutcome;
			}
			set
			{
				if ((this._ShowForOutcome != value))
				{
					this.OnShowForOutcomeChanging(value);
					this.SendPropertyChanging();
					this._ShowForOutcome = value;
					this.SendPropertyChanged("ShowForOutcome");
					this.OnShowForOutcomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowForTransfer", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool ShowForTransfer
		{
			get
			{
				return this._ShowForTransfer;
			}
			set
			{
				if ((this._ShowForTransfer != value))
				{
					this.OnShowForTransferChanging(value);
					this.SendPropertyChanging();
					this._ShowForTransfer = value;
					this.SendPropertyChanged("ShowForTransfer");
					this.OnShowForTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExternal", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsExternal
		{
			get
			{
				return this._IsExternal;
			}
			set
			{
				if ((this._IsExternal != value))
				{
					this.OnIsExternalChanging(value);
					this.SendPropertyChanging();
					this._IsExternal = value;
					this.SendPropertyChanged("IsExternal");
					this.OnIsExternalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CategoryTemplate", Storage="_CategoryTemplates", ThisKey="Id", OtherKey="FromAccountId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<CategoryTemplate> CategoryTemplates
		{
			get
			{
				if ((this.serializing 
							&& (this._CategoryTemplates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CategoryTemplates;
			}
			set
			{
				this._CategoryTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CategoryTemplate1", Storage="_CategoryTemplates_Accounts_Tos", ThisKey="Id", OtherKey="ToAccountId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<CategoryTemplate> CategoryTemplates_Accounts_Tos
		{
			get
			{
				if ((this.serializing 
							&& (this._CategoryTemplates_Accounts_Tos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CategoryTemplates_Accounts_Tos;
			}
			set
			{
				this._CategoryTemplates_Accounts_Tos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PlannedTransaction", Storage="_PlannedTransactions", ThisKey="Id", OtherKey="AccountId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<PlannedTransaction> PlannedTransactions
		{
			get
			{
				if ((this.serializing 
							&& (this._PlannedTransactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlannedTransactions;
			}
			set
			{
				this._PlannedTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_TransactionGroup", Storage="_TransactionGroups", ThisKey="Id", OtherKey="FromAccountId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<TransactionGroup> TransactionGroups
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionGroups.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionGroups;
			}
			set
			{
				this._TransactionGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_TransactionGroup1", Storage="_TransactionGroups_Accounts1s", ThisKey="Id", OtherKey="ToAccountId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<TransactionGroup> TransactionGroups_Accounts1s
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionGroups_Accounts1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionGroups_Accounts1s;
			}
			set
			{
				this._TransactionGroups_Accounts1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="AccountId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				if ((this.serializing 
							&& (this._Transactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Account", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CategoryTemplates(CategoryTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_CategoryTemplates(CategoryTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_CategoryTemplates_Accounts_Tos(CategoryTemplate entity)
		{
			this.SendPropertyChanging();
			entity.ToAccount = this;
		}
		
		private void detach_CategoryTemplates_Accounts_Tos(CategoryTemplate entity)
		{
			this.SendPropertyChanging();
			entity.ToAccount = null;
		}
		
		private void attach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_TransactionGroups_Accounts1s(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.ToAccount = this;
		}
		
		private void detach_TransactionGroups_Accounts1s(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.ToAccount = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void Initialize()
		{
			this._CategoryTemplates = new EntitySet<CategoryTemplate>(new Action<CategoryTemplate>(this.attach_CategoryTemplates), new Action<CategoryTemplate>(this.detach_CategoryTemplates));
			this._CategoryTemplates_Accounts_Tos = new EntitySet<CategoryTemplate>(new Action<CategoryTemplate>(this.attach_CategoryTemplates_Accounts_Tos), new Action<CategoryTemplate>(this.detach_CategoryTemplates_Accounts_Tos));
			this._PlannedTransactions = new EntitySet<PlannedTransaction>(new Action<PlannedTransaction>(this.attach_PlannedTransactions), new Action<PlannedTransaction>(this.detach_PlannedTransactions));
			this._TransactionGroups = new EntitySet<TransactionGroup>(new Action<TransactionGroup>(this.attach_TransactionGroups), new Action<TransactionGroup>(this.detach_TransactionGroups));
			this._TransactionGroups_Accounts1s = new EntitySet<TransactionGroup>(new Action<TransactionGroup>(this.attach_TransactionGroups_Accounts1s), new Action<TransactionGroup>(this.detach_TransactionGroups_Accounts1s));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Section = default(EntityRef<Section>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectionId;
		
		private System.Nullable<int> _ParentId;
		
		private string _Name;
		
		private string _Description;
		
		private string _Icon;
		
		private bool _IsDefault;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<Category> _Categories_Categories;
		
		private EntitySet<PlannedTransaction> _PlannedTransactions;
		
		private EntitySet<TransactionGroup> _TransactionGroups;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntityRef<Category> _Parent;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Category()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Categories_Categories", ThisKey="Id", OtherKey="ParentId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Category> Categories_Categories
		{
			get
			{
				if ((this.serializing 
							&& (this._Categories_Categories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Categories_Categories;
			}
			set
			{
				this._Categories_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_PlannedTransaction", Storage="_PlannedTransactions", ThisKey="Id", OtherKey="CategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<PlannedTransaction> PlannedTransactions
		{
			get
			{
				if ((this.serializing 
							&& (this._PlannedTransactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlannedTransactions;
			}
			set
			{
				this._PlannedTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_TransactionGroup", Storage="_TransactionGroups", ThisKey="Id", OtherKey="CategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<TransactionGroup> TransactionGroups
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionGroups.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionGroups;
			}
			set
			{
				this._TransactionGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="CategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				if ((this.serializing 
							&& (this._Transactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Parent", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public Category Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				Category previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Categories_Categories.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Categories_Categories.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Category", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Category", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Categories_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void Initialize()
		{
			this._Categories_Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories_Categories), new Action<Category>(this.detach_Categories_Categories));
			this._PlannedTransactions = new EntitySet<PlannedTransaction>(new Action<PlannedTransaction>(this.attach_PlannedTransactions), new Action<PlannedTransaction>(this.detach_PlannedTransactions));
			this._TransactionGroups = new EntitySet<TransactionGroup>(new Action<TransactionGroup>(this.attach_TransactionGroups), new Action<TransactionGroup>(this.detach_TransactionGroups));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Parent = default(EntityRef<Category>);
			this._Section = default(EntityRef<Section>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryTemplates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CategoryTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private int _SectionId;
		
		private System.Nullable<int> _FromAccountId;
		
		private int _ToAccountId;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Account> _ToAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnFromAccountIdChanging(System.Nullable<int> value);
    partial void OnFromAccountIdChanged();
    partial void OnToAccountIdChanging(int value);
    partial void OnToAccountIdChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public CategoryTemplate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAccountId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> FromAccountId
		{
			get
			{
				return this._FromAccountId;
			}
			set
			{
				if ((this._FromAccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromAccountIdChanging(value);
					this.SendPropertyChanging();
					this._FromAccountId = value;
					this.SendPropertyChanged("FromAccountId");
					this.OnFromAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAccountId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int ToAccountId
		{
			get
			{
				return this._ToAccountId;
			}
			set
			{
				if ((this._ToAccountId != value))
				{
					if (this._ToAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ToAccountId = value;
					this.SendPropertyChanged("ToAccountId");
					this.OnToAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CategoryTemplate", Storage="_Account", ThisKey="FromAccountId", OtherKey="Id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.CategoryTemplates.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.CategoryTemplates.Add(this);
						this._FromAccountId = value.Id;
					}
					else
					{
						this._FromAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CategoryTemplate1", Storage="_ToAccount", ThisKey="ToAccountId", OtherKey="Id", IsForeignKey=true)]
		public Account ToAccount
		{
			get
			{
				return this._ToAccount.Entity;
			}
			set
			{
				Account previousValue = this._ToAccount.Entity;
				if (((previousValue != value) 
							|| (this._ToAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToAccount.Entity = null;
						previousValue.CategoryTemplates_Accounts_Tos.Remove(this);
					}
					this._ToAccount.Entity = value;
					if ((value != null))
					{
						value.CategoryTemplates_Accounts_Tos.Add(this);
						this._ToAccountId = value.Id;
					}
					else
					{
						this._ToAccountId = default(int);
					}
					this.SendPropertyChanged("ToAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._ToAccount = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currencies")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SectionId;
		
		private string _Name;
		
		private string _Symbol;
		
		private string _Description;
		
		private bool _IsDefault;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<CurrencyRate> _CurrencyRates;
		
		private EntitySet<CurrencyRate> _CurrencyRates_Currencies1s;
		
		private EntitySet<PlannedTransaction> _PlannedTransactions;
		
		private EntitySet<StatisticsTotalOnDateDetail> _StatisticsTotalOnDateDetails;
		
		private EntitySet<TransactionGroup> _TransactionGroups;
		
		private EntitySet<TransactionGroup> _TransactionGroups_Currencies1s;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntityRef<Section> _Section;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(System.Nullable<int> value);
    partial void OnSectionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Currency()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate", Storage="_CurrencyRates", ThisKey="Id", OtherKey="BaseCurrencyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<CurrencyRate> CurrencyRates
		{
			get
			{
				if ((this.serializing 
							&& (this._CurrencyRates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CurrencyRates;
			}
			set
			{
				this._CurrencyRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate1", Storage="_CurrencyRates_Currencies1s", ThisKey="Id", OtherKey="TargetCurrencyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<CurrencyRate> CurrencyRates_Currencies1s
		{
			get
			{
				if ((this.serializing 
							&& (this._CurrencyRates_Currencies1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CurrencyRates_Currencies1s;
			}
			set
			{
				this._CurrencyRates_Currencies1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_PlannedTransaction", Storage="_PlannedTransactions", ThisKey="Id", OtherKey="CurrencyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<PlannedTransaction> PlannedTransactions
		{
			get
			{
				if ((this.serializing 
							&& (this._PlannedTransactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlannedTransactions;
			}
			set
			{
				this._PlannedTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_StatisticsTotalOnDateDetail", Storage="_StatisticsTotalOnDateDetails", ThisKey="Id", OtherKey="CurrencyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<StatisticsTotalOnDateDetail> StatisticsTotalOnDateDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._StatisticsTotalOnDateDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StatisticsTotalOnDateDetails;
			}
			set
			{
				this._StatisticsTotalOnDateDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_TransactionGroup", Storage="_TransactionGroups", ThisKey="Id", OtherKey="ToCurrencyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<TransactionGroup> TransactionGroups
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionGroups.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionGroups;
			}
			set
			{
				this._TransactionGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_TransactionGroup1", Storage="_TransactionGroups_Currencies1s", ThisKey="Id", OtherKey="FromCurrencyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<TransactionGroup> TransactionGroups_Currencies1s
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionGroups_Currencies1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionGroups_Currencies1s;
			}
			set
			{
				this._TransactionGroups_Currencies1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="CurrencyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				if ((this.serializing 
							&& (this._Transactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Currency", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.Currencies.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.Currencies.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_CurrencyRates_Currencies1s(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.TargetCurrency = this;
		}
		
		private void detach_CurrencyRates_Currencies1s(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.TargetCurrency = null;
		}
		
		private void attach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_StatisticsTotalOnDateDetails(StatisticsTotalOnDateDetail entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_StatisticsTotalOnDateDetails(StatisticsTotalOnDateDetail entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_TransactionGroups_Currencies1s(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.FromCurrency = this;
		}
		
		private void detach_TransactionGroups_Currencies1s(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.FromCurrency = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void Initialize()
		{
			this._CurrencyRates = new EntitySet<CurrencyRate>(new Action<CurrencyRate>(this.attach_CurrencyRates), new Action<CurrencyRate>(this.detach_CurrencyRates));
			this._CurrencyRates_Currencies1s = new EntitySet<CurrencyRate>(new Action<CurrencyRate>(this.attach_CurrencyRates_Currencies1s), new Action<CurrencyRate>(this.detach_CurrencyRates_Currencies1s));
			this._PlannedTransactions = new EntitySet<PlannedTransaction>(new Action<PlannedTransaction>(this.attach_PlannedTransactions), new Action<PlannedTransaction>(this.detach_PlannedTransactions));
			this._StatisticsTotalOnDateDetails = new EntitySet<StatisticsTotalOnDateDetail>(new Action<StatisticsTotalOnDateDetail>(this.attach_StatisticsTotalOnDateDetails), new Action<StatisticsTotalOnDateDetail>(this.detach_StatisticsTotalOnDateDetails));
			this._TransactionGroups = new EntitySet<TransactionGroup>(new Action<TransactionGroup>(this.attach_TransactionGroups), new Action<TransactionGroup>(this.detach_TransactionGroups));
			this._TransactionGroups_Currencies1s = new EntitySet<TransactionGroup>(new Action<TransactionGroup>(this.attach_TransactionGroups_Currencies1s), new Action<TransactionGroup>(this.detach_TransactionGroups_Currencies1s));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Section = default(EntityRef<Section>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyRates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CurrencyRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectionId;
		
		private System.DateTime _Date;
		
		private int _BaseCurrencyId;
		
		private int _TargetCurrencyId;
		
		private decimal _Rate;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Currency> _TargetCurrency;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _UpdatedByUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnBaseCurrencyIdChanging(int value);
    partial void OnBaseCurrencyIdChanged();
    partial void OnTargetCurrencyIdChanging(int value);
    partial void OnTargetCurrencyIdChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public CurrencyRate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCurrencyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int BaseCurrencyId
		{
			get
			{
				return this._BaseCurrencyId;
			}
			set
			{
				if ((this._BaseCurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._BaseCurrencyId = value;
					this.SendPropertyChanged("BaseCurrencyId");
					this.OnBaseCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCurrencyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int TargetCurrencyId
		{
			get
			{
				return this._TargetCurrencyId;
			}
			set
			{
				if ((this._TargetCurrencyId != value))
				{
					if (this._TargetCurrency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._TargetCurrencyId = value;
					this.SendPropertyChanged("TargetCurrencyId");
					this.OnTargetCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._UpdatedByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate", Storage="_Currency", ThisKey="BaseCurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.CurrencyRates.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.CurrencyRates.Add(this);
						this._BaseCurrencyId = value.Id;
					}
					else
					{
						this._BaseCurrencyId = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate1", Storage="_TargetCurrency", ThisKey="TargetCurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency TargetCurrency
		{
			get
			{
				return this._TargetCurrency.Entity;
			}
			set
			{
				Currency previousValue = this._TargetCurrency.Entity;
				if (((previousValue != value) 
							|| (this._TargetCurrency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TargetCurrency.Entity = null;
						previousValue.CurrencyRates_Currencies1s.Remove(this);
					}
					this._TargetCurrency.Entity = value;
					if ((value != null))
					{
						value.CurrencyRates_Currencies1s.Add(this);
						this._TargetCurrencyId = value.Id;
					}
					else
					{
						this._TargetCurrencyId = default(int);
					}
					this.SendPropertyChanged("TargetCurrency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_CurrencyRate", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.CurrencyRates.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.CurrencyRates.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CurrencyRate", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CurrencyRates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CurrencyRates.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CurrencyRate1", Storage="_UpdatedByUser", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public User UpdatedByUser
		{
			get
			{
				return this._UpdatedByUser.Entity;
			}
			set
			{
				User previousValue = this._UpdatedByUser.Entity;
				if (((previousValue != value) 
							|| (this._UpdatedByUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UpdatedByUser.Entity = null;
						previousValue.CurrencyRates_Users1s.Remove(this);
					}
					this._UpdatedByUser.Entity = value;
					if ((value != null))
					{
						value.CurrencyRates_Users1s.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("UpdatedByUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Currency = default(EntityRef<Currency>);
			this._TargetCurrency = default(EntityRef<Currency>);
			this._Section = default(EntityRef<Section>);
			this._User = default(EntityRef<User>);
			this._UpdatedByUser = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DateTitles")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DateTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectionId;
		
		private System.DateTime _Date;
		
		private string _Title;
		
		private System.DateTime _CreatedWhen;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _UpdatedByUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public DateTitle()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._UpdatedByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_DateTitle", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.DateTitles.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.DateTitles.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DateTitle", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DateTitles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DateTitles.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DateTitle1", Storage="_UpdatedByUser", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public User UpdatedByUser
		{
			get
			{
				return this._UpdatedByUser.Entity;
			}
			set
			{
				User previousValue = this._UpdatedByUser.Entity;
				if (((previousValue != value) 
							|| (this._UpdatedByUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UpdatedByUser.Entity = null;
						previousValue.DateTitles_Users_UpdatedBies.Remove(this);
					}
					this._UpdatedByUser.Entity = value;
					if ((value != null))
					{
						value.DateTitles_Users_UpdatedBies.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("UpdatedByUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Section = default(EntityRef<Section>);
			this._User = default(EntityRef<User>);
			this._UpdatedByUser = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Directions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Direction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private int _Sign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSignChanging(int value);
    partial void OnSignChanged();
    #endregion
		
		public Direction()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Sign
		{
			get
			{
				return this._Sign;
			}
			set
			{
				if ((this._Sign != value))
				{
					this.OnSignChanging(value);
					this.SendPropertyChanging();
					this._Sign = value;
					this.SendPropertyChanged("Sign");
					this.OnSignChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeriodTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PeriodType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<short> _Hours;
		
		private System.Nullable<short> _Days;
		
		private System.Nullable<short> _Weeks;
		
		private System.Nullable<short> _WorkingDays;
		
		private System.Nullable<short> _Monthes;
		
		private System.Nullable<short> _Quarters;
		
		private System.Nullable<short> _Years;
		
		private bool _IsDefault;
		
		private EntitySet<PlannedTransaction> _PlannedTransactions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHoursChanging(System.Nullable<short> value);
    partial void OnHoursChanged();
    partial void OnDaysChanging(System.Nullable<short> value);
    partial void OnDaysChanged();
    partial void OnWeeksChanging(System.Nullable<short> value);
    partial void OnWeeksChanged();
    partial void OnWorkingDaysChanging(System.Nullable<short> value);
    partial void OnWorkingDaysChanged();
    partial void OnMonthesChanging(System.Nullable<short> value);
    partial void OnMonthesChanged();
    partial void OnQuartersChanging(System.Nullable<short> value);
    partial void OnQuartersChanged();
    partial void OnYearsChanging(System.Nullable<short> value);
    partial void OnYearsChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public PeriodType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<short> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<short> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weeks", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<short> Weeks
		{
			get
			{
				return this._Weeks;
			}
			set
			{
				if ((this._Weeks != value))
				{
					this.OnWeeksChanging(value);
					this.SendPropertyChanging();
					this._Weeks = value;
					this.SendPropertyChanged("Weeks");
					this.OnWeeksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingDays", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<short> WorkingDays
		{
			get
			{
				return this._WorkingDays;
			}
			set
			{
				if ((this._WorkingDays != value))
				{
					this.OnWorkingDaysChanging(value);
					this.SendPropertyChanging();
					this._WorkingDays = value;
					this.SendPropertyChanged("WorkingDays");
					this.OnWorkingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monthes", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<short> Monthes
		{
			get
			{
				return this._Monthes;
			}
			set
			{
				if ((this._Monthes != value))
				{
					this.OnMonthesChanging(value);
					this.SendPropertyChanging();
					this._Monthes = value;
					this.SendPropertyChanged("Monthes");
					this.OnMonthesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quarters", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<short> Quarters
		{
			get
			{
				return this._Quarters;
			}
			set
			{
				if ((this._Quarters != value))
				{
					this.OnQuartersChanging(value);
					this.SendPropertyChanging();
					this._Quarters = value;
					this.SendPropertyChanged("Quarters");
					this.OnQuartersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Years", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<short> Years
		{
			get
			{
				return this._Years;
			}
			set
			{
				if ((this._Years != value))
				{
					this.OnYearsChanging(value);
					this.SendPropertyChanging();
					this._Years = value;
					this.SendPropertyChanged("Years");
					this.OnYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodType_PlannedTransaction", Storage="_PlannedTransactions", ThisKey="Id", OtherKey="PeriodTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<PlannedTransaction> PlannedTransactions
		{
			get
			{
				if ((this.serializing 
							&& (this._PlannedTransactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlannedTransactions;
			}
			set
			{
				this._PlannedTransactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.PeriodType = this;
		}
		
		private void detach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.PeriodType = null;
		}
		
		private void Initialize()
		{
			this._PlannedTransactions = new EntitySet<PlannedTransaction>(new Action<PlannedTransaction>(this.attach_PlannedTransactions), new Action<PlannedTransaction>(this.detach_PlannedTransactions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<UserPermission> _UserPermissions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Permission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_UserPermission", Storage="_UserPermissions", ThisKey="Id", OtherKey="PermissionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<UserPermission> UserPermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._UserPermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserPermissions;
			}
			set
			{
				this._UserPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserPermissions(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_UserPermissions(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void Initialize()
		{
			this._UserPermissions = new EntitySet<UserPermission>(new Action<UserPermission>(this.attach_UserPermissions), new Action<UserPermission>(this.detach_UserPermissions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlannedTransactions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlannedTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectionId;
		
		private int _PeriodTypeId;
		
		private int _TransactionTypeId;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<int> _CategoryId;
		
		private System.DateTime _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private decimal _Amount;
		
		private decimal _Sum;
		
		private int _CurrencyId;
		
		private string _Description;
		
		private string _Tags;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<PeriodType> _PeriodType;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<TransactionType> _TransactionType;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _UpdatedByUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnPeriodTypeIdChanging(int value);
    partial void OnPeriodTypeIdChanged();
    partial void OnTransactionTypeIdChanging(int value);
    partial void OnTransactionTypeIdChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    partial void OnCurrencyIdChanging(int value);
    partial void OnCurrencyIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public PlannedTransaction()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PeriodTypeId
		{
			get
			{
				return this._PeriodTypeId;
			}
			set
			{
				if ((this._PeriodTypeId != value))
				{
					if (this._PeriodType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodTypeId = value;
					this.SendPropertyChanged("PeriodTypeId");
					this.OnPeriodTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int TransactionTypeId
		{
			get
			{
				return this._TransactionTypeId;
			}
			set
			{
				if ((this._TransactionTypeId != value))
				{
					if (this._TransactionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeId = value;
					this.SendPropertyChanged("TransactionTypeId");
					this.OnTransactionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._UpdatedByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PlannedTransaction", Storage="_Account", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PlannedTransactions.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PlannedTransactions.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_PlannedTransaction", Storage="_Category", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.PlannedTransactions.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.PlannedTransactions.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_PlannedTransaction", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.PlannedTransactions.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.PlannedTransactions.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodType_PlannedTransaction", Storage="_PeriodType", ThisKey="PeriodTypeId", OtherKey="Id", IsForeignKey=true)]
		public PeriodType PeriodType
		{
			get
			{
				return this._PeriodType.Entity;
			}
			set
			{
				PeriodType previousValue = this._PeriodType.Entity;
				if (((previousValue != value) 
							|| (this._PeriodType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodType.Entity = null;
						previousValue.PlannedTransactions.Remove(this);
					}
					this._PeriodType.Entity = value;
					if ((value != null))
					{
						value.PlannedTransactions.Add(this);
						this._PeriodTypeId = value.Id;
					}
					else
					{
						this._PeriodTypeId = default(int);
					}
					this.SendPropertyChanged("PeriodType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_PlannedTransaction", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.PlannedTransactions.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.PlannedTransactions.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionType_PlannedTransaction", Storage="_TransactionType", ThisKey="TransactionTypeId", OtherKey="Id", IsForeignKey=true)]
		public TransactionType TransactionType
		{
			get
			{
				return this._TransactionType.Entity;
			}
			set
			{
				TransactionType previousValue = this._TransactionType.Entity;
				if (((previousValue != value) 
							|| (this._TransactionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionType.Entity = null;
						previousValue.PlannedTransactions.Remove(this);
					}
					this._TransactionType.Entity = value;
					if ((value != null))
					{
						value.PlannedTransactions.Add(this);
						this._TransactionTypeId = value.Id;
					}
					else
					{
						this._TransactionTypeId = default(int);
					}
					this.SendPropertyChanged("TransactionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PlannedTransaction", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PlannedTransactions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PlannedTransactions.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PlannedTransaction1", Storage="_UpdatedByUser", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public User UpdatedByUser
		{
			get
			{
				return this._UpdatedByUser.Entity;
			}
			set
			{
				User previousValue = this._UpdatedByUser.Entity;
				if (((previousValue != value) 
							|| (this._UpdatedByUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UpdatedByUser.Entity = null;
						previousValue.PlannedTransactions_Users_Updateds.Remove(this);
					}
					this._UpdatedByUser.Entity = value;
					if ((value != null))
					{
						value.PlannedTransactions_Users_Updateds.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("UpdatedByUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Category = default(EntityRef<Category>);
			this._Currency = default(EntityRef<Currency>);
			this._PeriodType = default(EntityRef<PeriodType>);
			this._Section = default(EntityRef<Section>);
			this._TransactionType = default(EntityRef<TransactionType>);
			this._User = default(EntityRef<User>);
			this._UpdatedByUser = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SectionAdmins")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SectionAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _SectionId;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _BlockedWhen;
		
		private System.Nullable<int> _BlockedBy;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnBlockedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnBlockedWhenChanged();
    partial void OnBlockedByChanging(System.Nullable<int> value);
    partial void OnBlockedByChanged();
    #endregion
		
		public SectionAdmin()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> BlockedWhen
		{
			get
			{
				return this._BlockedWhen;
			}
			set
			{
				if ((this._BlockedWhen != value))
				{
					this.OnBlockedWhenChanging(value);
					this.SendPropertyChanging();
					this._BlockedWhen = value;
					this.SendPropertyChanged("BlockedWhen");
					this.OnBlockedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> BlockedBy
		{
			get
			{
				return this._BlockedBy;
			}
			set
			{
				if ((this._BlockedBy != value))
				{
					this.OnBlockedByChanging(value);
					this.SendPropertyChanging();
					this._BlockedBy = value;
					this.SendPropertyChanged("BlockedBy");
					this.OnBlockedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_SectionAdmin", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.SectionAdmins.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.SectionAdmins.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SectionAdmin", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SectionAdmins.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SectionAdmins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Section = default(EntityRef<Section>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sections")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsDisabled;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<Currency> _Currencies;
		
		private EntitySet<CurrencyRate> _CurrencyRates;
		
		private EntitySet<DateTitle> _DateTitles;
		
		private EntitySet<PlannedTransaction> _PlannedTransactions;
		
		private EntitySet<SectionAdmin> _SectionAdmins;
		
		private EntitySet<Setting> _Settings;
		
		private EntitySet<StatisticsTotalOnDate> _StatisticsTotalOnDates;
		
		private EntitySet<Tag> _Tags;
		
		private EntitySet<TransactionGroup> _TransactionGroups;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<TransactionTag> _TransactionTags;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Section()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Account", Storage="_Accounts", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Account> Accounts
		{
			get
			{
				if ((this.serializing 
							&& (this._Accounts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Category", Storage="_Categories", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Category> Categories
		{
			get
			{
				if ((this.serializing 
							&& (this._Categories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Currency", Storage="_Currencies", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Currency> Currencies
		{
			get
			{
				if ((this.serializing 
							&& (this._Currencies.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Currencies;
			}
			set
			{
				this._Currencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_CurrencyRate", Storage="_CurrencyRates", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<CurrencyRate> CurrencyRates
		{
			get
			{
				if ((this.serializing 
							&& (this._CurrencyRates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CurrencyRates;
			}
			set
			{
				this._CurrencyRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_DateTitle", Storage="_DateTitles", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<DateTitle> DateTitles
		{
			get
			{
				if ((this.serializing 
							&& (this._DateTitles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DateTitles;
			}
			set
			{
				this._DateTitles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_PlannedTransaction", Storage="_PlannedTransactions", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<PlannedTransaction> PlannedTransactions
		{
			get
			{
				if ((this.serializing 
							&& (this._PlannedTransactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlannedTransactions;
			}
			set
			{
				this._PlannedTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_SectionAdmin", Storage="_SectionAdmins", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<SectionAdmin> SectionAdmins
		{
			get
			{
				if ((this.serializing 
							&& (this._SectionAdmins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SectionAdmins;
			}
			set
			{
				this._SectionAdmins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Setting", Storage="_Settings", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<Setting> Settings
		{
			get
			{
				if ((this.serializing 
							&& (this._Settings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Settings;
			}
			set
			{
				this._Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_StatisticsTotalOnDate", Storage="_StatisticsTotalOnDates", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<StatisticsTotalOnDate> StatisticsTotalOnDates
		{
			get
			{
				if ((this.serializing 
							&& (this._StatisticsTotalOnDates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StatisticsTotalOnDates;
			}
			set
			{
				this._StatisticsTotalOnDates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Tag", Storage="_Tags", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<Tag> Tags
		{
			get
			{
				if ((this.serializing 
							&& (this._Tags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tags;
			}
			set
			{
				this._Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_TransactionGroup", Storage="_TransactionGroups", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<TransactionGroup> TransactionGroups
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionGroups.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionGroups;
			}
			set
			{
				this._TransactionGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				if ((this.serializing 
							&& (this._Transactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_TransactionTag", Storage="_TransactionTags", ThisKey="Id", OtherKey="SectionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<TransactionTag> TransactionTags
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionTags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionTags;
			}
			set
			{
				this._TransactionTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_Currencies(Currency entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_Currencies(Currency entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_DateTitles(DateTitle entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_DateTitles(DateTitle entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_SectionAdmins(SectionAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_SectionAdmins(SectionAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_StatisticsTotalOnDates(StatisticsTotalOnDate entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_StatisticsTotalOnDates(StatisticsTotalOnDate entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_TransactionTags(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_TransactionTags(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void Initialize()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._Currencies = new EntitySet<Currency>(new Action<Currency>(this.attach_Currencies), new Action<Currency>(this.detach_Currencies));
			this._CurrencyRates = new EntitySet<CurrencyRate>(new Action<CurrencyRate>(this.attach_CurrencyRates), new Action<CurrencyRate>(this.detach_CurrencyRates));
			this._DateTitles = new EntitySet<DateTitle>(new Action<DateTitle>(this.attach_DateTitles), new Action<DateTitle>(this.detach_DateTitles));
			this._PlannedTransactions = new EntitySet<PlannedTransaction>(new Action<PlannedTransaction>(this.attach_PlannedTransactions), new Action<PlannedTransaction>(this.detach_PlannedTransactions));
			this._SectionAdmins = new EntitySet<SectionAdmin>(new Action<SectionAdmin>(this.attach_SectionAdmins), new Action<SectionAdmin>(this.detach_SectionAdmins));
			this._Settings = new EntitySet<Setting>(new Action<Setting>(this.attach_Settings), new Action<Setting>(this.detach_Settings));
			this._StatisticsTotalOnDates = new EntitySet<StatisticsTotalOnDate>(new Action<StatisticsTotalOnDate>(this.attach_StatisticsTotalOnDates), new Action<StatisticsTotalOnDate>(this.detach_StatisticsTotalOnDates));
			this._Tags = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags), new Action<Tag>(this.detach_Tags));
			this._TransactionGroups = new EntitySet<TransactionGroup>(new Action<TransactionGroup>(this.attach_TransactionGroups), new Action<TransactionGroup>(this.detach_TransactionGroups));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._TransactionTags = new EntitySet<TransactionTag>(new Action<TransactionTag>(this.attach_TransactionTags), new Action<TransactionTag>(this.detach_TransactionTags));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SectionId;
		
		private System.Nullable<int> _UserId;
		
		private string _Name;
		
		private string _Value;
		
		private string _Description;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(System.Nullable<int> value);
    partial void OnSectionIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public Setting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Setting", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.Settings.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.Settings.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Setting", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Settings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Settings.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Section = default(EntityRef<Section>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatisticsTotalOnDateDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StatisticsTotalOnDateDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TotalOnDateId;
		
		private int _CurrencyId;
		
		private decimal _Sum;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<StatisticsTotalOnDate> _StatisticsTotalOnDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTotalOnDateIdChanging(int value);
    partial void OnTotalOnDateIdChanged();
    partial void OnCurrencyIdChanging(int value);
    partial void OnCurrencyIdChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    #endregion
		
		public StatisticsTotalOnDateDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOnDateId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TotalOnDateId
		{
			get
			{
				return this._TotalOnDateId;
			}
			set
			{
				if ((this._TotalOnDateId != value))
				{
					if (this._StatisticsTotalOnDate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTotalOnDateIdChanging(value);
					this.SendPropertyChanging();
					this._TotalOnDateId = value;
					this.SendPropertyChanged("TotalOnDateId");
					this.OnTotalOnDateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_StatisticsTotalOnDateDetail", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.StatisticsTotalOnDateDetails.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.StatisticsTotalOnDateDetails.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatisticsTotalOnDate_StatisticsTotalOnDateDetail", Storage="_StatisticsTotalOnDate", ThisKey="TotalOnDateId", OtherKey="Id", IsForeignKey=true)]
		public StatisticsTotalOnDate StatisticsTotalOnDate
		{
			get
			{
				return this._StatisticsTotalOnDate.Entity;
			}
			set
			{
				StatisticsTotalOnDate previousValue = this._StatisticsTotalOnDate.Entity;
				if (((previousValue != value) 
							|| (this._StatisticsTotalOnDate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatisticsTotalOnDate.Entity = null;
						previousValue.StatisticsTotalOnDateDetails.Remove(this);
					}
					this._StatisticsTotalOnDate.Entity = value;
					if ((value != null))
					{
						value.StatisticsTotalOnDateDetails.Add(this);
						this._TotalOnDateId = value.Id;
					}
					else
					{
						this._TotalOnDateId = default(int);
					}
					this.SendPropertyChanged("StatisticsTotalOnDate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Currency = default(EntityRef<Currency>);
			this._StatisticsTotalOnDate = default(EntityRef<StatisticsTotalOnDate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatisticsTotalOnDates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StatisticsTotalOnDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectionId;
		
		private System.DateTime _TotalOnDate;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private EntitySet<StatisticsTotalOnDateDetail> _StatisticsTotalOnDateDetails;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnTotalOnDateChanging(System.DateTime value);
    partial void OnTotalOnDateChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public StatisticsTotalOnDate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOnDate", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime TotalOnDate
		{
			get
			{
				return this._TotalOnDate;
			}
			set
			{
				if ((this._TotalOnDate != value))
				{
					this.OnTotalOnDateChanging(value);
					this.SendPropertyChanging();
					this._TotalOnDate = value;
					this.SendPropertyChanged("TotalOnDate");
					this.OnTotalOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatisticsTotalOnDate_StatisticsTotalOnDateDetail", Storage="_StatisticsTotalOnDateDetails", ThisKey="Id", OtherKey="TotalOnDateId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<StatisticsTotalOnDateDetail> StatisticsTotalOnDateDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._StatisticsTotalOnDateDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StatisticsTotalOnDateDetails;
			}
			set
			{
				this._StatisticsTotalOnDateDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_StatisticsTotalOnDate", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.StatisticsTotalOnDates.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.StatisticsTotalOnDates.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StatisticsTotalOnDate", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StatisticsTotalOnDates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StatisticsTotalOnDates.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StatisticsTotalOnDateDetails(StatisticsTotalOnDateDetail entity)
		{
			this.SendPropertyChanging();
			entity.StatisticsTotalOnDate = this;
		}
		
		private void detach_StatisticsTotalOnDateDetails(StatisticsTotalOnDateDetail entity)
		{
			this.SendPropertyChanging();
			entity.StatisticsTotalOnDate = null;
		}
		
		private void Initialize()
		{
			this._StatisticsTotalOnDateDetails = new EntitySet<StatisticsTotalOnDateDetail>(new Action<StatisticsTotalOnDateDetail>(this.attach_StatisticsTotalOnDateDetails), new Action<StatisticsTotalOnDateDetail>(this.detach_StatisticsTotalOnDateDetails));
			this._Section = default(EntityRef<Section>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tags")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SectionId;
		
		private string _Name;
		
		private int _Hits;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<TransactionTag> _TransactionTags;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _UpdatedByUser;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(System.Nullable<int> value);
    partial void OnSectionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHitsChanging(int value);
    partial void OnHitsChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Tag()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hits", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Hits
		{
			get
			{
				return this._Hits;
			}
			set
			{
				if ((this._Hits != value))
				{
					this.OnHitsChanging(value);
					this.SendPropertyChanging();
					this._Hits = value;
					this.SendPropertyChanged("Hits");
					this.OnHitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._UpdatedByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TransactionTag", Storage="_TransactionTags", ThisKey="Id", OtherKey="TagId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<TransactionTag> TransactionTags
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionTags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionTags;
			}
			set
			{
				this._TransactionTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Tag", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.Tags.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.Tags.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tag", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tags.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tags.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tag1", Storage="_UpdatedByUser", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public User UpdatedByUser
		{
			get
			{
				return this._UpdatedByUser.Entity;
			}
			set
			{
				User previousValue = this._UpdatedByUser.Entity;
				if (((previousValue != value) 
							|| (this._UpdatedByUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UpdatedByUser.Entity = null;
						previousValue.Tags_Users_Updateds.Remove(this);
					}
					this._UpdatedByUser.Entity = value;
					if ((value != null))
					{
						value.Tags_Users_Updateds.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("UpdatedByUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TransactionTags(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTags_Tag = this;
		}
		
		private void detach_TransactionTags(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTags_Tag = null;
		}
		
		private void Initialize()
		{
			this._TransactionTags = new EntitySet<TransactionTag>(new Action<TransactionTag>(this.attach_TransactionTags), new Action<TransactionTag>(this.detach_TransactionTags));
			this._Section = default(EntityRef<Section>);
			this._User = default(EntityRef<User>);
			this._UpdatedByUser = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionGroups")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TransactionGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectionId;
		
		private System.DateTime _Date;
		
		private int _TransactionTypeId;
		
		private System.Nullable<int> _CategoryId;
		
		private System.Nullable<int> _FromAccountId;
		
		private System.Nullable<int> _ToAccountId;
		
		private System.Nullable<decimal> _FromSum;
		
		private System.Nullable<decimal> _ToSum;
		
		private System.Nullable<int> _FromCurrencyId;
		
		private System.Nullable<int> _ToCurrencyId;
		
		private string _Description;
		
		private string _Tags;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Account> _ToAccount;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Currency> _FromCurrency;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<TransactionType> _TransactionType;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _UpdatedByUser;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTransactionTypeIdChanging(int value);
    partial void OnTransactionTypeIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnFromAccountIdChanging(System.Nullable<int> value);
    partial void OnFromAccountIdChanged();
    partial void OnToAccountIdChanging(System.Nullable<int> value);
    partial void OnToAccountIdChanged();
    partial void OnFromSumChanging(System.Nullable<decimal> value);
    partial void OnFromSumChanged();
    partial void OnToSumChanging(System.Nullable<decimal> value);
    partial void OnToSumChanged();
    partial void OnFromCurrencyIdChanging(System.Nullable<int> value);
    partial void OnFromCurrencyIdChanged();
    partial void OnToCurrencyIdChanging(System.Nullable<int> value);
    partial void OnToCurrencyIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public TransactionGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int TransactionTypeId
		{
			get
			{
				return this._TransactionTypeId;
			}
			set
			{
				if ((this._TransactionTypeId != value))
				{
					if (this._TransactionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeId = value;
					this.SendPropertyChanged("TransactionTypeId");
					this.OnTransactionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAccountId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> FromAccountId
		{
			get
			{
				return this._FromAccountId;
			}
			set
			{
				if ((this._FromAccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromAccountIdChanging(value);
					this.SendPropertyChanging();
					this._FromAccountId = value;
					this.SendPropertyChanged("FromAccountId");
					this.OnFromAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAccountId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> ToAccountId
		{
			get
			{
				return this._ToAccountId;
			}
			set
			{
				if ((this._ToAccountId != value))
				{
					if (this._ToAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ToAccountId = value;
					this.SendPropertyChanged("ToAccountId");
					this.OnToAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromSum", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> FromSum
		{
			get
			{
				return this._FromSum;
			}
			set
			{
				if ((this._FromSum != value))
				{
					this.OnFromSumChanging(value);
					this.SendPropertyChanging();
					this._FromSum = value;
					this.SendPropertyChanged("FromSum");
					this.OnFromSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToSum", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> ToSum
		{
			get
			{
				return this._ToSum;
			}
			set
			{
				if ((this._ToSum != value))
				{
					this.OnToSumChanging(value);
					this.SendPropertyChanging();
					this._ToSum = value;
					this.SendPropertyChanged("ToSum");
					this.OnToSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCurrencyId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> FromCurrencyId
		{
			get
			{
				return this._FromCurrencyId;
			}
			set
			{
				if ((this._FromCurrencyId != value))
				{
					if (this._FromCurrency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._FromCurrencyId = value;
					this.SendPropertyChanged("FromCurrencyId");
					this.OnFromCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCurrencyId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> ToCurrencyId
		{
			get
			{
				return this._ToCurrencyId;
			}
			set
			{
				if ((this._ToCurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._ToCurrencyId = value;
					this.SendPropertyChanged("ToCurrencyId");
					this.OnToCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._UpdatedByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionGroup_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="TransactionGroupId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				if ((this.serializing 
							&& (this._Transactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_TransactionGroup", Storage="_Account", ThisKey="FromAccountId", OtherKey="Id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.TransactionGroups.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.TransactionGroups.Add(this);
						this._FromAccountId = value.Id;
					}
					else
					{
						this._FromAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_TransactionGroup1", Storage="_ToAccount", ThisKey="ToAccountId", OtherKey="Id", IsForeignKey=true)]
		public Account ToAccount
		{
			get
			{
				return this._ToAccount.Entity;
			}
			set
			{
				Account previousValue = this._ToAccount.Entity;
				if (((previousValue != value) 
							|| (this._ToAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToAccount.Entity = null;
						previousValue.TransactionGroups_Accounts1s.Remove(this);
					}
					this._ToAccount.Entity = value;
					if ((value != null))
					{
						value.TransactionGroups_Accounts1s.Add(this);
						this._ToAccountId = value.Id;
					}
					else
					{
						this._ToAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ToAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_TransactionGroup", Storage="_Category", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.TransactionGroups.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.TransactionGroups.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_TransactionGroup", Storage="_Currency", ThisKey="ToCurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.TransactionGroups.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.TransactionGroups.Add(this);
						this._ToCurrencyId = value.Id;
					}
					else
					{
						this._ToCurrencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_TransactionGroup1", Storage="_FromCurrency", ThisKey="FromCurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency FromCurrency
		{
			get
			{
				return this._FromCurrency.Entity;
			}
			set
			{
				Currency previousValue = this._FromCurrency.Entity;
				if (((previousValue != value) 
							|| (this._FromCurrency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FromCurrency.Entity = null;
						previousValue.TransactionGroups_Currencies1s.Remove(this);
					}
					this._FromCurrency.Entity = value;
					if ((value != null))
					{
						value.TransactionGroups_Currencies1s.Add(this);
						this._FromCurrencyId = value.Id;
					}
					else
					{
						this._FromCurrencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FromCurrency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_TransactionGroup", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.TransactionGroups.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.TransactionGroups.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionType_TransactionGroup", Storage="_TransactionType", ThisKey="TransactionTypeId", OtherKey="Id", IsForeignKey=true)]
		public TransactionType TransactionType
		{
			get
			{
				return this._TransactionType.Entity;
			}
			set
			{
				TransactionType previousValue = this._TransactionType.Entity;
				if (((previousValue != value) 
							|| (this._TransactionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionType.Entity = null;
						previousValue.TransactionGroups.Remove(this);
					}
					this._TransactionType.Entity = value;
					if ((value != null))
					{
						value.TransactionGroups.Add(this);
						this._TransactionTypeId = value.Id;
					}
					else
					{
						this._TransactionTypeId = default(int);
					}
					this.SendPropertyChanged("TransactionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionGroup", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TransactionGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TransactionGroups.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionGroup1", Storage="_UpdatedByUser", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public User UpdatedByUser
		{
			get
			{
				return this._UpdatedByUser.Entity;
			}
			set
			{
				User previousValue = this._UpdatedByUser.Entity;
				if (((previousValue != value) 
							|| (this._UpdatedByUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UpdatedByUser.Entity = null;
						previousValue.TransactionGroups_Users1s.Remove(this);
					}
					this._UpdatedByUser.Entity = value;
					if ((value != null))
					{
						value.TransactionGroups_Users1s.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("UpdatedByUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionGroup = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionGroup = null;
		}
		
		private void Initialize()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Account = default(EntityRef<Account>);
			this._ToAccount = default(EntityRef<Account>);
			this._Category = default(EntityRef<Category>);
			this._Currency = default(EntityRef<Currency>);
			this._FromCurrency = default(EntityRef<Currency>);
			this._Section = default(EntityRef<Section>);
			this._TransactionType = default(EntityRef<TransactionType>);
			this._User = default(EntityRef<User>);
			this._UpdatedByUser = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionLinks")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TransactionLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ParentId;
		
		private int _ChildId;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private EntityRef<Transaction> _Transaction;
		
		private EntityRef<Transaction> _Parent;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnChildIdChanging(int value);
    partial void OnChildIdChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public TransactionLink()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ChildId
		{
			get
			{
				return this._ChildId;
			}
			set
			{
				if ((this._ChildId != value))
				{
					if (this._Transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChildIdChanging(value);
					this.SendPropertyChanging();
					this._ChildId = value;
					this.SendPropertyChanged("ChildId");
					this.OnChildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_TransactionLink", Storage="_Transaction", ThisKey="ChildId", OtherKey="Id", IsForeignKey=true)]
		public Transaction Transaction
		{
			get
			{
				return this._Transaction.Entity;
			}
			set
			{
				Transaction previousValue = this._Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction.Entity = null;
						previousValue.TransactionLinks.Remove(this);
					}
					this._Transaction.Entity = value;
					if ((value != null))
					{
						value.TransactionLinks.Add(this);
						this._ChildId = value.Id;
					}
					else
					{
						this._ChildId = default(int);
					}
					this.SendPropertyChanged("Transaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_TransactionLink1", Storage="_Parent", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public Transaction Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				Transaction previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.TransactionLinks_Transactions_Parents.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.TransactionLinks_Transactions_Parents.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(int);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionLink", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TransactionLinks.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TransactionLinks.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Transaction = default(EntityRef<Transaction>);
			this._Parent = default(EntityRef<Transaction>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectionId;
		
		private System.Nullable<int> _TransactionGroupId;
		
		private System.Nullable<int> _LinkedId;
		
		private System.Nullable<bool> _LinkedAsParent;
		
		private int _TransactionTypeId;
		
		private int _AccountId;
		
		private System.Nullable<int> _CategoryId;
		
		private decimal _Amount;
		
		private decimal _Sum;
		
		private string _Formula;
		
		private System.DateTime _Date;
		
		private int _CurrencyId;
		
		private string _Tags;
		
		private string _Description;
		
		private bool _IsNotForStatistics;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<TransactionLink> _TransactionLinks;
		
		private EntitySet<TransactionLink> _TransactionLinks_Transactions_Parents;
		
		private EntitySet<Transaction> _Transactions_Transactions_LinkedIds;
		
		private EntitySet<TransactionTag> _TransactionTags;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<TransactionGroup> _TransactionGroup;
		
		private EntityRef<Transaction> _Linked;
		
		private EntityRef<TransactionType> _TransactionType;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _UpdatedByUser;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnTransactionGroupIdChanging(System.Nullable<int> value);
    partial void OnTransactionGroupIdChanged();
    partial void OnLinkedIdChanging(System.Nullable<int> value);
    partial void OnLinkedIdChanged();
    partial void OnLinkedAsParentChanging(System.Nullable<bool> value);
    partial void OnLinkedAsParentChanged();
    partial void OnTransactionTypeIdChanging(int value);
    partial void OnTransactionTypeIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    partial void OnFormulaChanging(string value);
    partial void OnFormulaChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCurrencyIdChanging(int value);
    partial void OnCurrencyIdChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsNotForStatisticsChanging(bool value);
    partial void OnIsNotForStatisticsChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Transaction()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionGroupId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> TransactionGroupId
		{
			get
			{
				return this._TransactionGroupId;
			}
			set
			{
				if ((this._TransactionGroupId != value))
				{
					if (this._TransactionGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionGroupIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionGroupId = value;
					this.SendPropertyChanged("TransactionGroupId");
					this.OnTransactionGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> LinkedId
		{
			get
			{
				return this._LinkedId;
			}
			set
			{
				if ((this._LinkedId != value))
				{
					if (this._Linked.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkedIdChanging(value);
					this.SendPropertyChanging();
					this._LinkedId = value;
					this.SendPropertyChanged("LinkedId");
					this.OnLinkedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedAsParent", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> LinkedAsParent
		{
			get
			{
				return this._LinkedAsParent;
			}
			set
			{
				if ((this._LinkedAsParent != value))
				{
					this.OnLinkedAsParentChanging(value);
					this.SendPropertyChanging();
					this._LinkedAsParent = value;
					this.SendPropertyChanged("LinkedAsParent");
					this.OnLinkedAsParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int TransactionTypeId
		{
			get
			{
				return this._TransactionTypeId;
			}
			set
			{
				if ((this._TransactionTypeId != value))
				{
					if (this._TransactionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeId = value;
					this.SendPropertyChanged("TransactionTypeId");
					this.OnTransactionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Formula", DbType="NVarChar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Formula
		{
			get
			{
				return this._Formula;
			}
			set
			{
				if ((this._Formula != value))
				{
					this.OnFormulaChanging(value);
					this.SendPropertyChanging();
					this._Formula = value;
					this.SendPropertyChanged("Formula");
					this.OnFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotForStatistics", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool IsNotForStatistics
		{
			get
			{
				return this._IsNotForStatistics;
			}
			set
			{
				if ((this._IsNotForStatistics != value))
				{
					this.OnIsNotForStatisticsChanging(value);
					this.SendPropertyChanging();
					this._IsNotForStatistics = value;
					this.SendPropertyChanged("IsNotForStatistics");
					this.OnIsNotForStatisticsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._UpdatedByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_TransactionLink", Storage="_TransactionLinks", ThisKey="Id", OtherKey="ChildId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<TransactionLink> TransactionLinks
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionLinks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionLinks;
			}
			set
			{
				this._TransactionLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_TransactionLink1", Storage="_TransactionLinks_Transactions_Parents", ThisKey="Id", OtherKey="ParentId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<TransactionLink> TransactionLinks_Transactions_Parents
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionLinks_Transactions_Parents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionLinks_Transactions_Parents;
			}
			set
			{
				this._TransactionLinks_Transactions_Parents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Transaction", Storage="_Transactions_Transactions_LinkedIds", ThisKey="Id", OtherKey="LinkedId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<Transaction> Transactions_Transactions_LinkedIds
		{
			get
			{
				if ((this.serializing 
							&& (this._Transactions_Transactions_LinkedIds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transactions_Transactions_LinkedIds;
			}
			set
			{
				this._Transactions_Transactions_LinkedIds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_TransactionTag", Storage="_TransactionTags", ThisKey="Id", OtherKey="TransactionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<TransactionTag> TransactionTags
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionTags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionTags;
			}
			set
			{
				this._TransactionTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Transaction", Storage="_Account", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Transaction", Storage="_Category", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Transaction", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Transaction", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionGroup_Transaction", Storage="_TransactionGroup", ThisKey="TransactionGroupId", OtherKey="Id", IsForeignKey=true)]
		public TransactionGroup TransactionGroup
		{
			get
			{
				return this._TransactionGroup.Entity;
			}
			set
			{
				TransactionGroup previousValue = this._TransactionGroup.Entity;
				if (((previousValue != value) 
							|| (this._TransactionGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionGroup.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._TransactionGroup.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._TransactionGroupId = value.Id;
					}
					else
					{
						this._TransactionGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TransactionGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Transaction", Storage="_Linked", ThisKey="LinkedId", OtherKey="Id", IsForeignKey=true)]
		public Transaction Linked
		{
			get
			{
				return this._Linked.Entity;
			}
			set
			{
				Transaction previousValue = this._Linked.Entity;
				if (((previousValue != value) 
							|| (this._Linked.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Linked.Entity = null;
						previousValue.Transactions_Transactions_LinkedIds.Remove(this);
					}
					this._Linked.Entity = value;
					if ((value != null))
					{
						value.Transactions_Transactions_LinkedIds.Add(this);
						this._LinkedId = value.Id;
					}
					else
					{
						this._LinkedId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Linked");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionType_Transaction", Storage="_TransactionType", ThisKey="TransactionTypeId", OtherKey="Id", IsForeignKey=true)]
		public TransactionType TransactionType
		{
			get
			{
				return this._TransactionType.Entity;
			}
			set
			{
				TransactionType previousValue = this._TransactionType.Entity;
				if (((previousValue != value) 
							|| (this._TransactionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionType.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._TransactionType.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._TransactionTypeId = value.Id;
					}
					else
					{
						this._TransactionTypeId = default(int);
					}
					this.SendPropertyChanged("TransactionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction1", Storage="_UpdatedByUser", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public User UpdatedByUser
		{
			get
			{
				return this._UpdatedByUser.Entity;
			}
			set
			{
				User previousValue = this._UpdatedByUser.Entity;
				if (((previousValue != value) 
							|| (this._UpdatedByUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UpdatedByUser.Entity = null;
						previousValue.Transactions_Users_Updateds.Remove(this);
					}
					this._UpdatedByUser.Entity = value;
					if ((value != null))
					{
						value.Transactions_Users_Updateds.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("UpdatedByUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TransactionLinks(TransactionLink entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = this;
		}
		
		private void detach_TransactionLinks(TransactionLink entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = null;
		}
		
		private void attach_TransactionLinks_Transactions_Parents(TransactionLink entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_TransactionLinks_Transactions_Parents(TransactionLink entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_Transactions_Transactions_LinkedIds(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Linked = this;
		}
		
		private void detach_Transactions_Transactions_LinkedIds(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Linked = null;
		}
		
		private void attach_TransactionTags(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = this;
		}
		
		private void detach_TransactionTags(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = null;
		}
		
		private void Initialize()
		{
			this._TransactionLinks = new EntitySet<TransactionLink>(new Action<TransactionLink>(this.attach_TransactionLinks), new Action<TransactionLink>(this.detach_TransactionLinks));
			this._TransactionLinks_Transactions_Parents = new EntitySet<TransactionLink>(new Action<TransactionLink>(this.attach_TransactionLinks_Transactions_Parents), new Action<TransactionLink>(this.detach_TransactionLinks_Transactions_Parents));
			this._Transactions_Transactions_LinkedIds = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions_Transactions_LinkedIds), new Action<Transaction>(this.detach_Transactions_Transactions_LinkedIds));
			this._TransactionTags = new EntitySet<TransactionTag>(new Action<TransactionTag>(this.attach_TransactionTags), new Action<TransactionTag>(this.detach_TransactionTags));
			this._Account = default(EntityRef<Account>);
			this._Category = default(EntityRef<Category>);
			this._Currency = default(EntityRef<Currency>);
			this._Section = default(EntityRef<Section>);
			this._TransactionGroup = default(EntityRef<TransactionGroup>);
			this._Linked = default(EntityRef<Transaction>);
			this._TransactionType = default(EntityRef<TransactionType>);
			this._User = default(EntityRef<User>);
			this._UpdatedByUser = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionTags")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TransactionTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectionId;
		
		private int _TransactionId;
		
		private System.Nullable<int> _TagId;
		
		private string _Tag;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<Tag> _TransactionTags_Tag;
		
		private EntityRef<Transaction> _Transaction;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _UpdatedByUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnTransactionIdChanging(int value);
    partial void OnTransactionIdChanged();
    partial void OnTagIdChanging(System.Nullable<int> value);
    partial void OnTagIdChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public TransactionTag()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					if (this._Transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					if (this._TransactionTags_Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._UpdatedByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_TransactionTag", Storage="_Section", ThisKey="SectionId", OtherKey="Id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.TransactionTags.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.TransactionTags.Add(this);
						this._SectionId = value.Id;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TransactionTag", Storage="_TransactionTags_Tag", ThisKey="TagId", OtherKey="Id", IsForeignKey=true)]
		public Tag TransactionTags_Tag
		{
			get
			{
				return this._TransactionTags_Tag.Entity;
			}
			set
			{
				Tag previousValue = this._TransactionTags_Tag.Entity;
				if (((previousValue != value) 
							|| (this._TransactionTags_Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionTags_Tag.Entity = null;
						previousValue.TransactionTags.Remove(this);
					}
					this._TransactionTags_Tag.Entity = value;
					if ((value != null))
					{
						value.TransactionTags.Add(this);
						this._TagId = value.Id;
					}
					else
					{
						this._TagId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TransactionTags_Tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_TransactionTag", Storage="_Transaction", ThisKey="TransactionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Transaction Transaction
		{
			get
			{
				return this._Transaction.Entity;
			}
			set
			{
				Transaction previousValue = this._Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction.Entity = null;
						previousValue.TransactionTags.Remove(this);
					}
					this._Transaction.Entity = value;
					if ((value != null))
					{
						value.TransactionTags.Add(this);
						this._TransactionId = value.Id;
					}
					else
					{
						this._TransactionId = default(int);
					}
					this.SendPropertyChanged("Transaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionTag", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TransactionTags.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TransactionTags.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionTag1", Storage="_UpdatedByUser", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public User UpdatedByUser
		{
			get
			{
				return this._UpdatedByUser.Entity;
			}
			set
			{
				User previousValue = this._UpdatedByUser.Entity;
				if (((previousValue != value) 
							|| (this._UpdatedByUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UpdatedByUser.Entity = null;
						previousValue.TransactionTags_Users_Updateds.Remove(this);
					}
					this._UpdatedByUser.Entity = value;
					if ((value != null))
					{
						value.TransactionTags_Users_Updateds.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("UpdatedByUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Section = default(EntityRef<Section>);
			this._TransactionTags_Tag = default(EntityRef<Tag>);
			this._Transaction = default(EntityRef<Transaction>);
			this._User = default(EntityRef<User>);
			this._UpdatedByUser = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TransactionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<PlannedTransaction> _PlannedTransactions;
		
		private EntitySet<TransactionGroup> _TransactionGroups;
		
		private EntitySet<Transaction> _Transactions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TransactionType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionType_PlannedTransaction", Storage="_PlannedTransactions", ThisKey="Id", OtherKey="TransactionTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<PlannedTransaction> PlannedTransactions
		{
			get
			{
				if ((this.serializing 
							&& (this._PlannedTransactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlannedTransactions;
			}
			set
			{
				this._PlannedTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionType_TransactionGroup", Storage="_TransactionGroups", ThisKey="Id", OtherKey="TransactionTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<TransactionGroup> TransactionGroups
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionGroups.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionGroups;
			}
			set
			{
				this._TransactionGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionType_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="TransactionTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				if ((this.serializing 
							&& (this._Transactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionType = this;
		}
		
		private void detach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionType = null;
		}
		
		private void attach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.TransactionType = this;
		}
		
		private void detach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.TransactionType = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionType = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionType = null;
		}
		
		private void Initialize()
		{
			this._PlannedTransactions = new EntitySet<PlannedTransaction>(new Action<PlannedTransaction>(this.attach_PlannedTransactions), new Action<PlannedTransaction>(this.detach_PlannedTransactions));
			this._TransactionGroups = new EntitySet<TransactionGroup>(new Action<TransactionGroup>(this.attach_TransactionGroups), new Action<TransactionGroup>(this.detach_TransactionGroups));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserConnects")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserConnect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _UserConnectStatusId;
		
		private System.Nullable<int> _UserPasswordId;
		
		private string _Origin;
		
		private string _Token;
		
		private System.Nullable<System.DateTime> _ExpiresWhen;
		
		private System.DateTime _CreatedWhen;
		
		private int _CreatedBy;
		
		private EntityRef<UserPassword> _UserPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserConnectStatusIdChanging(int value);
    partial void OnUserConnectStatusIdChanged();
    partial void OnUserPasswordIdChanging(System.Nullable<int> value);
    partial void OnUserPasswordIdChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnExpiresWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiresWhenChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    #endregion
		
		public UserConnect()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserConnectStatusId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int UserConnectStatusId
		{
			get
			{
				return this._UserConnectStatusId;
			}
			set
			{
				if ((this._UserConnectStatusId != value))
				{
					this.OnUserConnectStatusIdChanging(value);
					this.SendPropertyChanging();
					this._UserConnectStatusId = value;
					this.SendPropertyChanged("UserConnectStatusId");
					this.OnUserConnectStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPasswordId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> UserPasswordId
		{
			get
			{
				return this._UserPasswordId;
			}
			set
			{
				if ((this._UserPasswordId != value))
				{
					if (this._UserPassword.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserPasswordIdChanging(value);
					this.SendPropertyChanging();
					this._UserPasswordId = value;
					this.SendPropertyChanged("UserPasswordId");
					this.OnUserPasswordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresWhen", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> ExpiresWhen
		{
			get
			{
				return this._ExpiresWhen;
			}
			set
			{
				if ((this._ExpiresWhen != value))
				{
					this.OnExpiresWhenChanging(value);
					this.SendPropertyChanging();
					this._ExpiresWhen = value;
					this.SendPropertyChanged("ExpiresWhen");
					this.OnExpiresWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPassword_UserConnect", Storage="_UserPassword", ThisKey="UserPasswordId", OtherKey="Id", IsForeignKey=true)]
		public UserPassword UserPassword
		{
			get
			{
				return this._UserPassword.Entity;
			}
			set
			{
				UserPassword previousValue = this._UserPassword.Entity;
				if (((previousValue != value) 
							|| (this._UserPassword.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserPassword.Entity = null;
						previousValue.UserConnects.Remove(this);
					}
					this._UserPassword.Entity = value;
					if ((value != null))
					{
						value.UserConnects.Add(this);
						this._UserPasswordId = value.Id;
					}
					else
					{
						this._UserPasswordId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserPassword");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._UserPassword = default(EntityRef<UserPassword>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserConnectStatuses")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserConnectStatuse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserConnectStatuse()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPasswords")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserPassword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _MemoriableWord;
		
		private string _Password;
		
		private bool _IsDisabled;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreateBy;
		
		private EntitySet<UserConnect> _UserConnects;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnMemoriableWordChanging(string value);
    partial void OnMemoriableWordChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    #endregion
		
		public UserPassword()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoriableWord", DbType="NVarChar(150)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string MemoriableWord
		{
			get
			{
				return this._MemoriableWord;
			}
			set
			{
				if ((this._MemoriableWord != value))
				{
					this.OnMemoriableWordChanging(value);
					this.SendPropertyChanging();
					this._MemoriableWord = value;
					this.SendPropertyChanged("MemoriableWord");
					this.OnMemoriableWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPassword_UserConnect", Storage="_UserConnects", ThisKey="Id", OtherKey="UserPasswordId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<UserConnect> UserConnects
		{
			get
			{
				if ((this.serializing 
							&& (this._UserConnects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserConnects;
			}
			set
			{
				this._UserConnects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPassword", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPasswords.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPasswords.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserConnects(UserConnect entity)
		{
			this.SendPropertyChanging();
			entity.UserPassword = this;
		}
		
		private void detach_UserConnects(UserConnect entity)
		{
			this.SendPropertyChanging();
			entity.UserPassword = null;
		}
		
		private void Initialize()
		{
			this._UserConnects = new EntitySet<UserConnect>(new Action<UserConnect>(this.attach_UserConnects), new Action<UserConnect>(this.detach_UserConnects));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPermissions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _PermissionId;
		
		private System.DateTime _CreatedWhen;
		
		private int _CreatedBy;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _CreatedByUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    #endregion
		
		public UserPermission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._CreatedByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_UserPermission", Storage="_Permission", ThisKey="PermissionId", OtherKey="Id", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.UserPermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.UserPermissions.Add(this);
						this._PermissionId = value.Id;
					}
					else
					{
						this._PermissionId = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPermissions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPermissions.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission1", Storage="_CreatedByUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User CreatedByUser
		{
			get
			{
				return this._CreatedByUser.Entity;
			}
			set
			{
				User previousValue = this._CreatedByUser.Entity;
				if (((previousValue != value) 
							|| (this._CreatedByUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreatedByUser.Entity = null;
						previousValue.UserPermissions_Users1s.Remove(this);
					}
					this._CreatedByUser.Entity = value;
					if ((value != null))
					{
						value.UserPermissions_Users1s.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("CreatedByUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Permission = default(EntityRef<Permission>);
			this._User = default(EntityRef<User>);
			this._CreatedByUser = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SectionId;
		
		private string _Name;
		
		private string _ContactPhoneNumber;
		
		private string _Email;
		
		private System.Data.Linq.Binary _Avatar;
		
		private string _Culture;
		
		private bool _IsDisabled;
		
		private bool _IsForsePassword;
		
		private System.DateTime _CreatedWhen;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedWhen;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<CurrencyRate> _CurrencyRates;
		
		private EntitySet<CurrencyRate> _CurrencyRates_Users1s;
		
		private EntitySet<DateTitle> _DateTitles;
		
		private EntitySet<DateTitle> _DateTitles_Users_UpdatedBies;
		
		private EntitySet<PlannedTransaction> _PlannedTransactions;
		
		private EntitySet<PlannedTransaction> _PlannedTransactions_Users_Updateds;
		
		private EntitySet<SectionAdmin> _SectionAdmins;
		
		private EntitySet<Setting> _Settings;
		
		private EntitySet<StatisticsTotalOnDate> _StatisticsTotalOnDates;
		
		private EntitySet<Tag> _Tags;
		
		private EntitySet<Tag> _Tags_Users_Updateds;
		
		private EntitySet<TransactionGroup> _TransactionGroups;
		
		private EntitySet<TransactionGroup> _TransactionGroups_Users1s;
		
		private EntitySet<TransactionLink> _TransactionLinks;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<Transaction> _Transactions_Users_Updateds;
		
		private EntitySet<TransactionTag> _TransactionTags;
		
		private EntitySet<TransactionTag> _TransactionTags_Users_Updateds;
		
		private EntitySet<UserPassword> _UserPasswords;
		
		private EntitySet<UserPermission> _UserPermissions;
		
		private EntitySet<UserPermission> _UserPermissions_Users1s;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectionIdChanging(System.Nullable<int> value);
    partial void OnSectionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactPhoneNumberChanging(string value);
    partial void OnContactPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAvatarChanging(System.Data.Linq.Binary value);
    partial void OnAvatarChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnIsForsePasswordChanging(bool value);
    partial void OnIsForsePasswordChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedWhenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhoneNumber", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ContactPhoneNumber
		{
			get
			{
				return this._ContactPhoneNumber;
			}
			set
			{
				if ((this._ContactPhoneNumber != value))
				{
					this.OnContactPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactPhoneNumber = value;
					this.SendPropertyChanged("ContactPhoneNumber");
					this.OnContactPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Data.Linq.Binary Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForsePassword", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsForsePassword
		{
			get
			{
				return this._IsForsePassword;
			}
			set
			{
				if ((this._IsForsePassword != value))
				{
					this.OnIsForsePasswordChanging(value);
					this.SendPropertyChanging();
					this._IsForsePassword = value;
					this.SendPropertyChanged("IsForsePassword");
					this.OnIsForsePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="SmallDateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedWhen", DbType="SmallDateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> UpdatedWhen
		{
			get
			{
				return this._UpdatedWhen;
			}
			set
			{
				if ((this._UpdatedWhen != value))
				{
					this.OnUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._UpdatedWhen = value;
					this.SendPropertyChanged("UpdatedWhen");
					this.OnUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Category", Storage="_Categories", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<Category> Categories
		{
			get
			{
				if ((this.serializing 
							&& (this._Categories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CurrencyRate", Storage="_CurrencyRates", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<CurrencyRate> CurrencyRates
		{
			get
			{
				if ((this.serializing 
							&& (this._CurrencyRates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CurrencyRates;
			}
			set
			{
				this._CurrencyRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CurrencyRate1", Storage="_CurrencyRates_Users1s", ThisKey="Id", OtherKey="UpdatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<CurrencyRate> CurrencyRates_Users1s
		{
			get
			{
				if ((this.serializing 
							&& (this._CurrencyRates_Users1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CurrencyRates_Users1s;
			}
			set
			{
				this._CurrencyRates_Users1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DateTitle", Storage="_DateTitles", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<DateTitle> DateTitles
		{
			get
			{
				if ((this.serializing 
							&& (this._DateTitles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DateTitles;
			}
			set
			{
				this._DateTitles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DateTitle1", Storage="_DateTitles_Users_UpdatedBies", ThisKey="Id", OtherKey="UpdatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<DateTitle> DateTitles_Users_UpdatedBies
		{
			get
			{
				if ((this.serializing 
							&& (this._DateTitles_Users_UpdatedBies.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DateTitles_Users_UpdatedBies;
			}
			set
			{
				this._DateTitles_Users_UpdatedBies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PlannedTransaction", Storage="_PlannedTransactions", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<PlannedTransaction> PlannedTransactions
		{
			get
			{
				if ((this.serializing 
							&& (this._PlannedTransactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlannedTransactions;
			}
			set
			{
				this._PlannedTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PlannedTransaction1", Storage="_PlannedTransactions_Users_Updateds", ThisKey="Id", OtherKey="UpdatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<PlannedTransaction> PlannedTransactions_Users_Updateds
		{
			get
			{
				if ((this.serializing 
							&& (this._PlannedTransactions_Users_Updateds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlannedTransactions_Users_Updateds;
			}
			set
			{
				this._PlannedTransactions_Users_Updateds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SectionAdmin", Storage="_SectionAdmins", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<SectionAdmin> SectionAdmins
		{
			get
			{
				if ((this.serializing 
							&& (this._SectionAdmins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SectionAdmins;
			}
			set
			{
				this._SectionAdmins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Setting", Storage="_Settings", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<Setting> Settings
		{
			get
			{
				if ((this.serializing 
							&& (this._Settings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Settings;
			}
			set
			{
				this._Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StatisticsTotalOnDate", Storage="_StatisticsTotalOnDates", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<StatisticsTotalOnDate> StatisticsTotalOnDates
		{
			get
			{
				if ((this.serializing 
							&& (this._StatisticsTotalOnDates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StatisticsTotalOnDates;
			}
			set
			{
				this._StatisticsTotalOnDates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tag", Storage="_Tags", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<Tag> Tags
		{
			get
			{
				if ((this.serializing 
							&& (this._Tags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tags;
			}
			set
			{
				this._Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tag1", Storage="_Tags_Users_Updateds", ThisKey="Id", OtherKey="UpdatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<Tag> Tags_Users_Updateds
		{
			get
			{
				if ((this.serializing 
							&& (this._Tags_Users_Updateds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tags_Users_Updateds;
			}
			set
			{
				this._Tags_Users_Updateds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionGroup", Storage="_TransactionGroups", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<TransactionGroup> TransactionGroups
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionGroups.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionGroups;
			}
			set
			{
				this._TransactionGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionGroup1", Storage="_TransactionGroups_Users1s", ThisKey="Id", OtherKey="UpdatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<TransactionGroup> TransactionGroups_Users1s
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionGroups_Users1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionGroups_Users1s;
			}
			set
			{
				this._TransactionGroups_Users1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionLink", Storage="_TransactionLinks", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<TransactionLink> TransactionLinks
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionLinks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionLinks;
			}
			set
			{
				this._TransactionLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				if ((this.serializing 
							&& (this._Transactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction1", Storage="_Transactions_Users_Updateds", ThisKey="Id", OtherKey="UpdatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<Transaction> Transactions_Users_Updateds
		{
			get
			{
				if ((this.serializing 
							&& (this._Transactions_Users_Updateds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transactions_Users_Updateds;
			}
			set
			{
				this._Transactions_Users_Updateds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionTag", Storage="_TransactionTags", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<TransactionTag> TransactionTags
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionTags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionTags;
			}
			set
			{
				this._TransactionTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionTag1", Storage="_TransactionTags_Users_Updateds", ThisKey="Id", OtherKey="UpdatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<TransactionTag> TransactionTags_Users_Updateds
		{
			get
			{
				if ((this.serializing 
							&& (this._TransactionTags_Users_Updateds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TransactionTags_Users_Updateds;
			}
			set
			{
				this._TransactionTags_Users_Updateds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPassword", Storage="_UserPasswords", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<UserPassword> UserPasswords
		{
			get
			{
				if ((this.serializing 
							&& (this._UserPasswords.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserPasswords;
			}
			set
			{
				this._UserPasswords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission", Storage="_UserPermissions", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<UserPermission> UserPermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._UserPermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserPermissions;
			}
			set
			{
				this._UserPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission1", Storage="_UserPermissions_Users1s", ThisKey="Id", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<UserPermission> UserPermissions_Users1s
		{
			get
			{
				if ((this.serializing 
							&& (this._UserPermissions_Users1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserPermissions_Users1s;
			}
			set
			{
				this._UserPermissions_Users1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CurrencyRates_Users1s(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = this;
		}
		
		private void detach_CurrencyRates_Users1s(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = null;
		}
		
		private void attach_DateTitles(DateTitle entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DateTitles(DateTitle entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DateTitles_Users_UpdatedBies(DateTitle entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = this;
		}
		
		private void detach_DateTitles_Users_UpdatedBies(DateTitle entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = null;
		}
		
		private void attach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PlannedTransactions(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PlannedTransactions_Users_Updateds(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = this;
		}
		
		private void detach_PlannedTransactions_Users_Updateds(PlannedTransaction entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = null;
		}
		
		private void attach_SectionAdmins(SectionAdmin entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SectionAdmins(SectionAdmin entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StatisticsTotalOnDates(StatisticsTotalOnDate entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StatisticsTotalOnDates(StatisticsTotalOnDate entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tags_Users_Updateds(Tag entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = this;
		}
		
		private void detach_Tags_Users_Updateds(Tag entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = null;
		}
		
		private void attach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TransactionGroups(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TransactionGroups_Users1s(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = this;
		}
		
		private void detach_TransactionGroups_Users1s(TransactionGroup entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = null;
		}
		
		private void attach_TransactionLinks(TransactionLink entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TransactionLinks(TransactionLink entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Transactions_Users_Updateds(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = this;
		}
		
		private void detach_Transactions_Users_Updateds(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = null;
		}
		
		private void attach_TransactionTags(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TransactionTags(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TransactionTags_Users_Updateds(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = this;
		}
		
		private void detach_TransactionTags_Users_Updateds(TransactionTag entity)
		{
			this.SendPropertyChanging();
			entity.UpdatedByUser = null;
		}
		
		private void attach_UserPasswords(UserPassword entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPasswords(UserPassword entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserPermissions(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPermissions(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserPermissions_Users1s(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.CreatedByUser = this;
		}
		
		private void detach_UserPermissions_Users1s(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.CreatedByUser = null;
		}
		
		private void Initialize()
		{
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._CurrencyRates = new EntitySet<CurrencyRate>(new Action<CurrencyRate>(this.attach_CurrencyRates), new Action<CurrencyRate>(this.detach_CurrencyRates));
			this._CurrencyRates_Users1s = new EntitySet<CurrencyRate>(new Action<CurrencyRate>(this.attach_CurrencyRates_Users1s), new Action<CurrencyRate>(this.detach_CurrencyRates_Users1s));
			this._DateTitles = new EntitySet<DateTitle>(new Action<DateTitle>(this.attach_DateTitles), new Action<DateTitle>(this.detach_DateTitles));
			this._DateTitles_Users_UpdatedBies = new EntitySet<DateTitle>(new Action<DateTitle>(this.attach_DateTitles_Users_UpdatedBies), new Action<DateTitle>(this.detach_DateTitles_Users_UpdatedBies));
			this._PlannedTransactions = new EntitySet<PlannedTransaction>(new Action<PlannedTransaction>(this.attach_PlannedTransactions), new Action<PlannedTransaction>(this.detach_PlannedTransactions));
			this._PlannedTransactions_Users_Updateds = new EntitySet<PlannedTransaction>(new Action<PlannedTransaction>(this.attach_PlannedTransactions_Users_Updateds), new Action<PlannedTransaction>(this.detach_PlannedTransactions_Users_Updateds));
			this._SectionAdmins = new EntitySet<SectionAdmin>(new Action<SectionAdmin>(this.attach_SectionAdmins), new Action<SectionAdmin>(this.detach_SectionAdmins));
			this._Settings = new EntitySet<Setting>(new Action<Setting>(this.attach_Settings), new Action<Setting>(this.detach_Settings));
			this._StatisticsTotalOnDates = new EntitySet<StatisticsTotalOnDate>(new Action<StatisticsTotalOnDate>(this.attach_StatisticsTotalOnDates), new Action<StatisticsTotalOnDate>(this.detach_StatisticsTotalOnDates));
			this._Tags = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags), new Action<Tag>(this.detach_Tags));
			this._Tags_Users_Updateds = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags_Users_Updateds), new Action<Tag>(this.detach_Tags_Users_Updateds));
			this._TransactionGroups = new EntitySet<TransactionGroup>(new Action<TransactionGroup>(this.attach_TransactionGroups), new Action<TransactionGroup>(this.detach_TransactionGroups));
			this._TransactionGroups_Users1s = new EntitySet<TransactionGroup>(new Action<TransactionGroup>(this.attach_TransactionGroups_Users1s), new Action<TransactionGroup>(this.detach_TransactionGroups_Users1s));
			this._TransactionLinks = new EntitySet<TransactionLink>(new Action<TransactionLink>(this.attach_TransactionLinks), new Action<TransactionLink>(this.detach_TransactionLinks));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Transactions_Users_Updateds = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions_Users_Updateds), new Action<Transaction>(this.detach_Transactions_Users_Updateds));
			this._TransactionTags = new EntitySet<TransactionTag>(new Action<TransactionTag>(this.attach_TransactionTags), new Action<TransactionTag>(this.detach_TransactionTags));
			this._TransactionTags_Users_Updateds = new EntitySet<TransactionTag>(new Action<TransactionTag>(this.attach_TransactionTags_Users_Updateds), new Action<TransactionTag>(this.detach_TransactionTags_Users_Updateds));
			this._UserPasswords = new EntitySet<UserPassword>(new Action<UserPassword>(this.attach_UserPasswords), new Action<UserPassword>(this.detach_UserPasswords));
			this._UserPermissions = new EntitySet<UserPermission>(new Action<UserPermission>(this.attach_UserPermissions), new Action<UserPermission>(this.detach_UserPermissions));
			this._UserPermissions_Users1s = new EntitySet<UserPermission>(new Action<UserPermission>(this.attach_UserPermissions_Users1s), new Action<UserPermission>(this.detach_UserPermissions_Users1s));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSettings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _DefaultValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    #endregion
		
		public UserSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
